// Code generated by ent, DO NOT EDIT.

package ent

import (
	"kubecit/ent/cloudhost"
	"kubecit/ent/cluster"
	"kubecit/ent/schema"
	"kubecit/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	cloudhostFields := schema.CloudHost{}.Fields()
	_ = cloudhostFields
	// cloudhostDescUUID is the schema descriptor for uuid field.
	cloudhostDescUUID := cloudhostFields[0].Descriptor()
	// cloudhost.UUIDValidator is a validator for the "uuid" field. It is called by the builders before save.
	cloudhost.UUIDValidator = cloudhostDescUUID.Validators[0].(func(string) error)
	// cloudhostDescState is the schema descriptor for state field.
	cloudhostDescState := cloudhostFields[1].Descriptor()
	// cloudhost.DefaultState holds the default value on creation for the state field.
	cloudhost.DefaultState = cloudhostDescState.Default.(string)
	// cloudhost.StateValidator is a validator for the "state" field. It is called by the builders before save.
	cloudhost.StateValidator = cloudhostDescState.Validators[0].(func(string) error)
	// cloudhostDescIsActive is the schema descriptor for isActive field.
	cloudhostDescIsActive := cloudhostFields[18].Descriptor()
	// cloudhost.DefaultIsActive holds the default value on creation for the isActive field.
	cloudhost.DefaultIsActive = cloudhostDescIsActive.Default.(bool)
	clusterFields := schema.Cluster{}.Fields()
	_ = clusterFields
	// clusterDescKubeconfig is the schema descriptor for kubeconfig field.
	clusterDescKubeconfig := clusterFields[0].Descriptor()
	// cluster.DefaultKubeconfig holds the default value on creation for the kubeconfig field.
	cluster.DefaultKubeconfig = clusterDescKubeconfig.Default.(string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescAge is the schema descriptor for age field.
	userDescAge := userFields[0].Descriptor()
	// user.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	user.AgeValidator = userDescAge.Validators[0].(func(int) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.DefaultPassword holds the default value on creation for the password field.
	user.DefaultPassword = userDescPassword.Default.(string)
}
