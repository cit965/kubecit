// Code generated by ent, DO NOT EDIT.

package cloudhost

import (
	"kubecit/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldID, id))
}

// UUID applies equality check predicate on the "uuid" field. It's identical to UUIDEQ.
func UUID(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldUUID, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldState, v))
}

// Ipv6AddressPrivate applies equality check predicate on the "ipv6AddressPrivate" field. It's identical to Ipv6AddressPrivateEQ.
func Ipv6AddressPrivate(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPublic applies equality check predicate on the "ipv6AddressPublic" field. It's identical to Ipv6AddressPublicEQ.
func Ipv6AddressPublic(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIpv6AddressPublic, v))
}

// Ipv4AddressPrivate applies equality check predicate on the "ipv4AddressPrivate" field. It's identical to Ipv4AddressPrivateEQ.
func Ipv4AddressPrivate(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPublic applies equality check predicate on the "ipv4AddressPublic" field. It's identical to Ipv4AddressPublicEQ.
func Ipv4AddressPublic(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIpv4AddressPublic, v))
}

// Memory applies equality check predicate on the "memory" field. It's identical to MemoryEQ.
func Memory(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldMemory, v))
}

// CPU applies equality check predicate on the "cpu" field. It's identical to CPUEQ.
func CPU(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldCPU, v))
}

// CreatedTime applies equality check predicate on the "createdTime" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldCreatedTime, v))
}

// ExpiredTime applies equality check predicate on the "expiredTime" field. It's identical to ExpiredTimeEQ.
func ExpiredTime(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldExpiredTime, v))
}

// InstanceName applies equality check predicate on the "instanceName" field. It's identical to InstanceNameEQ.
func InstanceName(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldInstanceName, v))
}

// ImageName applies equality check predicate on the "imageName" field. It's identical to ImageNameEQ.
func ImageName(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldImageName, v))
}

// OsType applies equality check predicate on the "osType" field. It's identical to OsTypeEQ.
func OsType(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldOsType, v))
}

// Manufacturer applies equality check predicate on the "manufacturer" field. It's identical to ManufacturerEQ.
func Manufacturer(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldManufacturer, v))
}

// Zone applies equality check predicate on the "zone" field. It's identical to ZoneEQ.
func Zone(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldZone, v))
}

// SecurityGroups applies equality check predicate on the "securityGroups" field. It's identical to SecurityGroupsEQ.
func SecurityGroups(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldSecurityGroups, v))
}

// BillType applies equality check predicate on the "billType" field. It's identical to BillTypeEQ.
func BillType(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldBillType, v))
}

// ChargeType applies equality check predicate on the "chargeType" field. It's identical to ChargeTypeEQ.
func ChargeType(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldChargeType, v))
}

// IsActive applies equality check predicate on the "isActive" field. It's identical to IsActiveEQ.
func IsActive(v bool) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIsActive, v))
}

// InstanceType applies equality check predicate on the "instanceType" field. It's identical to InstanceTypeEQ.
func InstanceType(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldInstanceType, v))
}

// UUIDEQ applies the EQ predicate on the "uuid" field.
func UUIDEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldUUID, v))
}

// UUIDNEQ applies the NEQ predicate on the "uuid" field.
func UUIDNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldUUID, v))
}

// UUIDIn applies the In predicate on the "uuid" field.
func UUIDIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldUUID, vs...))
}

// UUIDNotIn applies the NotIn predicate on the "uuid" field.
func UUIDNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldUUID, vs...))
}

// UUIDGT applies the GT predicate on the "uuid" field.
func UUIDGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldUUID, v))
}

// UUIDGTE applies the GTE predicate on the "uuid" field.
func UUIDGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldUUID, v))
}

// UUIDLT applies the LT predicate on the "uuid" field.
func UUIDLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldUUID, v))
}

// UUIDLTE applies the LTE predicate on the "uuid" field.
func UUIDLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldUUID, v))
}

// UUIDContains applies the Contains predicate on the "uuid" field.
func UUIDContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldUUID, v))
}

// UUIDHasPrefix applies the HasPrefix predicate on the "uuid" field.
func UUIDHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldUUID, v))
}

// UUIDHasSuffix applies the HasSuffix predicate on the "uuid" field.
func UUIDHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldUUID, v))
}

// UUIDEqualFold applies the EqualFold predicate on the "uuid" field.
func UUIDEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldUUID, v))
}

// UUIDContainsFold applies the ContainsFold predicate on the "uuid" field.
func UUIDContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldUUID, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldState, v))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldState, v))
}

// Ipv6AddressPrivateEQ applies the EQ predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateNEQ applies the NEQ predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateIn applies the In predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldIpv6AddressPrivate, vs...))
}

// Ipv6AddressPrivateNotIn applies the NotIn predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldIpv6AddressPrivate, vs...))
}

// Ipv6AddressPrivateGT applies the GT predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateGTE applies the GTE predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateLT applies the LT predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateLTE applies the LTE predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateContains applies the Contains predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateHasPrefix applies the HasPrefix predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateHasSuffix applies the HasSuffix predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateEqualFold applies the EqualFold predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPrivateContainsFold applies the ContainsFold predicate on the "ipv6AddressPrivate" field.
func Ipv6AddressPrivateContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldIpv6AddressPrivate, v))
}

// Ipv6AddressPublicEQ applies the EQ predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicNEQ applies the NEQ predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicIn applies the In predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldIpv6AddressPublic, vs...))
}

// Ipv6AddressPublicNotIn applies the NotIn predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldIpv6AddressPublic, vs...))
}

// Ipv6AddressPublicGT applies the GT predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicGTE applies the GTE predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicLT applies the LT predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicLTE applies the LTE predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicContains applies the Contains predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicHasPrefix applies the HasPrefix predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicHasSuffix applies the HasSuffix predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicEqualFold applies the EqualFold predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldIpv6AddressPublic, v))
}

// Ipv6AddressPublicContainsFold applies the ContainsFold predicate on the "ipv6AddressPublic" field.
func Ipv6AddressPublicContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldIpv6AddressPublic, v))
}

// Ipv4AddressPrivateEQ applies the EQ predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateNEQ applies the NEQ predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateIn applies the In predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldIpv4AddressPrivate, vs...))
}

// Ipv4AddressPrivateNotIn applies the NotIn predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldIpv4AddressPrivate, vs...))
}

// Ipv4AddressPrivateGT applies the GT predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateGTE applies the GTE predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateLT applies the LT predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateLTE applies the LTE predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateContains applies the Contains predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateHasPrefix applies the HasPrefix predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateHasSuffix applies the HasSuffix predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateEqualFold applies the EqualFold predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPrivateContainsFold applies the ContainsFold predicate on the "ipv4AddressPrivate" field.
func Ipv4AddressPrivateContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldIpv4AddressPrivate, v))
}

// Ipv4AddressPublicEQ applies the EQ predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicNEQ applies the NEQ predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicIn applies the In predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldIpv4AddressPublic, vs...))
}

// Ipv4AddressPublicNotIn applies the NotIn predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldIpv4AddressPublic, vs...))
}

// Ipv4AddressPublicGT applies the GT predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicGTE applies the GTE predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicLT applies the LT predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicLTE applies the LTE predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicContains applies the Contains predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicHasPrefix applies the HasPrefix predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicHasSuffix applies the HasSuffix predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicEqualFold applies the EqualFold predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldIpv4AddressPublic, v))
}

// Ipv4AddressPublicContainsFold applies the ContainsFold predicate on the "ipv4AddressPublic" field.
func Ipv4AddressPublicContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldIpv4AddressPublic, v))
}

// MemoryEQ applies the EQ predicate on the "memory" field.
func MemoryEQ(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldMemory, v))
}

// MemoryNEQ applies the NEQ predicate on the "memory" field.
func MemoryNEQ(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldMemory, v))
}

// MemoryIn applies the In predicate on the "memory" field.
func MemoryIn(vs ...int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldMemory, vs...))
}

// MemoryNotIn applies the NotIn predicate on the "memory" field.
func MemoryNotIn(vs ...int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldMemory, vs...))
}

// MemoryGT applies the GT predicate on the "memory" field.
func MemoryGT(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldMemory, v))
}

// MemoryGTE applies the GTE predicate on the "memory" field.
func MemoryGTE(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldMemory, v))
}

// MemoryLT applies the LT predicate on the "memory" field.
func MemoryLT(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldMemory, v))
}

// MemoryLTE applies the LTE predicate on the "memory" field.
func MemoryLTE(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldMemory, v))
}

// CPUEQ applies the EQ predicate on the "cpu" field.
func CPUEQ(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldCPU, v))
}

// CPUNEQ applies the NEQ predicate on the "cpu" field.
func CPUNEQ(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldCPU, v))
}

// CPUIn applies the In predicate on the "cpu" field.
func CPUIn(vs ...int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldCPU, vs...))
}

// CPUNotIn applies the NotIn predicate on the "cpu" field.
func CPUNotIn(vs ...int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldCPU, vs...))
}

// CPUGT applies the GT predicate on the "cpu" field.
func CPUGT(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldCPU, v))
}

// CPUGTE applies the GTE predicate on the "cpu" field.
func CPUGTE(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldCPU, v))
}

// CPULT applies the LT predicate on the "cpu" field.
func CPULT(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldCPU, v))
}

// CPULTE applies the LTE predicate on the "cpu" field.
func CPULTE(v int) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldCPU, v))
}

// CreatedTimeEQ applies the EQ predicate on the "createdTime" field.
func CreatedTimeEQ(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "createdTime" field.
func CreatedTimeNEQ(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "createdTime" field.
func CreatedTimeIn(vs ...time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "createdTime" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "createdTime" field.
func CreatedTimeGT(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "createdTime" field.
func CreatedTimeGTE(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "createdTime" field.
func CreatedTimeLT(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "createdTime" field.
func CreatedTimeLTE(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldCreatedTime, v))
}

// ExpiredTimeEQ applies the EQ predicate on the "expiredTime" field.
func ExpiredTimeEQ(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldExpiredTime, v))
}

// ExpiredTimeNEQ applies the NEQ predicate on the "expiredTime" field.
func ExpiredTimeNEQ(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldExpiredTime, v))
}

// ExpiredTimeIn applies the In predicate on the "expiredTime" field.
func ExpiredTimeIn(vs ...time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldExpiredTime, vs...))
}

// ExpiredTimeNotIn applies the NotIn predicate on the "expiredTime" field.
func ExpiredTimeNotIn(vs ...time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldExpiredTime, vs...))
}

// ExpiredTimeGT applies the GT predicate on the "expiredTime" field.
func ExpiredTimeGT(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldExpiredTime, v))
}

// ExpiredTimeGTE applies the GTE predicate on the "expiredTime" field.
func ExpiredTimeGTE(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldExpiredTime, v))
}

// ExpiredTimeLT applies the LT predicate on the "expiredTime" field.
func ExpiredTimeLT(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldExpiredTime, v))
}

// ExpiredTimeLTE applies the LTE predicate on the "expiredTime" field.
func ExpiredTimeLTE(v time.Time) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldExpiredTime, v))
}

// InstanceNameEQ applies the EQ predicate on the "instanceName" field.
func InstanceNameEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldInstanceName, v))
}

// InstanceNameNEQ applies the NEQ predicate on the "instanceName" field.
func InstanceNameNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldInstanceName, v))
}

// InstanceNameIn applies the In predicate on the "instanceName" field.
func InstanceNameIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldInstanceName, vs...))
}

// InstanceNameNotIn applies the NotIn predicate on the "instanceName" field.
func InstanceNameNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldInstanceName, vs...))
}

// InstanceNameGT applies the GT predicate on the "instanceName" field.
func InstanceNameGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldInstanceName, v))
}

// InstanceNameGTE applies the GTE predicate on the "instanceName" field.
func InstanceNameGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldInstanceName, v))
}

// InstanceNameLT applies the LT predicate on the "instanceName" field.
func InstanceNameLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldInstanceName, v))
}

// InstanceNameLTE applies the LTE predicate on the "instanceName" field.
func InstanceNameLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldInstanceName, v))
}

// InstanceNameContains applies the Contains predicate on the "instanceName" field.
func InstanceNameContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldInstanceName, v))
}

// InstanceNameHasPrefix applies the HasPrefix predicate on the "instanceName" field.
func InstanceNameHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldInstanceName, v))
}

// InstanceNameHasSuffix applies the HasSuffix predicate on the "instanceName" field.
func InstanceNameHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldInstanceName, v))
}

// InstanceNameEqualFold applies the EqualFold predicate on the "instanceName" field.
func InstanceNameEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldInstanceName, v))
}

// InstanceNameContainsFold applies the ContainsFold predicate on the "instanceName" field.
func InstanceNameContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldInstanceName, v))
}

// ImageNameEQ applies the EQ predicate on the "imageName" field.
func ImageNameEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldImageName, v))
}

// ImageNameNEQ applies the NEQ predicate on the "imageName" field.
func ImageNameNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldImageName, v))
}

// ImageNameIn applies the In predicate on the "imageName" field.
func ImageNameIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldImageName, vs...))
}

// ImageNameNotIn applies the NotIn predicate on the "imageName" field.
func ImageNameNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldImageName, vs...))
}

// ImageNameGT applies the GT predicate on the "imageName" field.
func ImageNameGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldImageName, v))
}

// ImageNameGTE applies the GTE predicate on the "imageName" field.
func ImageNameGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldImageName, v))
}

// ImageNameLT applies the LT predicate on the "imageName" field.
func ImageNameLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldImageName, v))
}

// ImageNameLTE applies the LTE predicate on the "imageName" field.
func ImageNameLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldImageName, v))
}

// ImageNameContains applies the Contains predicate on the "imageName" field.
func ImageNameContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldImageName, v))
}

// ImageNameHasPrefix applies the HasPrefix predicate on the "imageName" field.
func ImageNameHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldImageName, v))
}

// ImageNameHasSuffix applies the HasSuffix predicate on the "imageName" field.
func ImageNameHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldImageName, v))
}

// ImageNameEqualFold applies the EqualFold predicate on the "imageName" field.
func ImageNameEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldImageName, v))
}

// ImageNameContainsFold applies the ContainsFold predicate on the "imageName" field.
func ImageNameContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldImageName, v))
}

// OsTypeEQ applies the EQ predicate on the "osType" field.
func OsTypeEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldOsType, v))
}

// OsTypeNEQ applies the NEQ predicate on the "osType" field.
func OsTypeNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldOsType, v))
}

// OsTypeIn applies the In predicate on the "osType" field.
func OsTypeIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldOsType, vs...))
}

// OsTypeNotIn applies the NotIn predicate on the "osType" field.
func OsTypeNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldOsType, vs...))
}

// OsTypeGT applies the GT predicate on the "osType" field.
func OsTypeGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldOsType, v))
}

// OsTypeGTE applies the GTE predicate on the "osType" field.
func OsTypeGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldOsType, v))
}

// OsTypeLT applies the LT predicate on the "osType" field.
func OsTypeLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldOsType, v))
}

// OsTypeLTE applies the LTE predicate on the "osType" field.
func OsTypeLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldOsType, v))
}

// OsTypeContains applies the Contains predicate on the "osType" field.
func OsTypeContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldOsType, v))
}

// OsTypeHasPrefix applies the HasPrefix predicate on the "osType" field.
func OsTypeHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldOsType, v))
}

// OsTypeHasSuffix applies the HasSuffix predicate on the "osType" field.
func OsTypeHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldOsType, v))
}

// OsTypeEqualFold applies the EqualFold predicate on the "osType" field.
func OsTypeEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldOsType, v))
}

// OsTypeContainsFold applies the ContainsFold predicate on the "osType" field.
func OsTypeContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldOsType, v))
}

// ManufacturerEQ applies the EQ predicate on the "manufacturer" field.
func ManufacturerEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldManufacturer, v))
}

// ManufacturerNEQ applies the NEQ predicate on the "manufacturer" field.
func ManufacturerNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldManufacturer, v))
}

// ManufacturerIn applies the In predicate on the "manufacturer" field.
func ManufacturerIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldManufacturer, vs...))
}

// ManufacturerNotIn applies the NotIn predicate on the "manufacturer" field.
func ManufacturerNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldManufacturer, vs...))
}

// ManufacturerGT applies the GT predicate on the "manufacturer" field.
func ManufacturerGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldManufacturer, v))
}

// ManufacturerGTE applies the GTE predicate on the "manufacturer" field.
func ManufacturerGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldManufacturer, v))
}

// ManufacturerLT applies the LT predicate on the "manufacturer" field.
func ManufacturerLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldManufacturer, v))
}

// ManufacturerLTE applies the LTE predicate on the "manufacturer" field.
func ManufacturerLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldManufacturer, v))
}

// ManufacturerContains applies the Contains predicate on the "manufacturer" field.
func ManufacturerContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldManufacturer, v))
}

// ManufacturerHasPrefix applies the HasPrefix predicate on the "manufacturer" field.
func ManufacturerHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldManufacturer, v))
}

// ManufacturerHasSuffix applies the HasSuffix predicate on the "manufacturer" field.
func ManufacturerHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldManufacturer, v))
}

// ManufacturerEqualFold applies the EqualFold predicate on the "manufacturer" field.
func ManufacturerEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldManufacturer, v))
}

// ManufacturerContainsFold applies the ContainsFold predicate on the "manufacturer" field.
func ManufacturerContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldManufacturer, v))
}

// ZoneEQ applies the EQ predicate on the "zone" field.
func ZoneEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldZone, v))
}

// ZoneNEQ applies the NEQ predicate on the "zone" field.
func ZoneNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldZone, v))
}

// ZoneIn applies the In predicate on the "zone" field.
func ZoneIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldZone, vs...))
}

// ZoneNotIn applies the NotIn predicate on the "zone" field.
func ZoneNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldZone, vs...))
}

// ZoneGT applies the GT predicate on the "zone" field.
func ZoneGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldZone, v))
}

// ZoneGTE applies the GTE predicate on the "zone" field.
func ZoneGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldZone, v))
}

// ZoneLT applies the LT predicate on the "zone" field.
func ZoneLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldZone, v))
}

// ZoneLTE applies the LTE predicate on the "zone" field.
func ZoneLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldZone, v))
}

// ZoneContains applies the Contains predicate on the "zone" field.
func ZoneContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldZone, v))
}

// ZoneHasPrefix applies the HasPrefix predicate on the "zone" field.
func ZoneHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldZone, v))
}

// ZoneHasSuffix applies the HasSuffix predicate on the "zone" field.
func ZoneHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldZone, v))
}

// ZoneEqualFold applies the EqualFold predicate on the "zone" field.
func ZoneEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldZone, v))
}

// ZoneContainsFold applies the ContainsFold predicate on the "zone" field.
func ZoneContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldZone, v))
}

// SecurityGroupsEQ applies the EQ predicate on the "securityGroups" field.
func SecurityGroupsEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldSecurityGroups, v))
}

// SecurityGroupsNEQ applies the NEQ predicate on the "securityGroups" field.
func SecurityGroupsNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldSecurityGroups, v))
}

// SecurityGroupsIn applies the In predicate on the "securityGroups" field.
func SecurityGroupsIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldSecurityGroups, vs...))
}

// SecurityGroupsNotIn applies the NotIn predicate on the "securityGroups" field.
func SecurityGroupsNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldSecurityGroups, vs...))
}

// SecurityGroupsGT applies the GT predicate on the "securityGroups" field.
func SecurityGroupsGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldSecurityGroups, v))
}

// SecurityGroupsGTE applies the GTE predicate on the "securityGroups" field.
func SecurityGroupsGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldSecurityGroups, v))
}

// SecurityGroupsLT applies the LT predicate on the "securityGroups" field.
func SecurityGroupsLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldSecurityGroups, v))
}

// SecurityGroupsLTE applies the LTE predicate on the "securityGroups" field.
func SecurityGroupsLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldSecurityGroups, v))
}

// SecurityGroupsContains applies the Contains predicate on the "securityGroups" field.
func SecurityGroupsContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldSecurityGroups, v))
}

// SecurityGroupsHasPrefix applies the HasPrefix predicate on the "securityGroups" field.
func SecurityGroupsHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldSecurityGroups, v))
}

// SecurityGroupsHasSuffix applies the HasSuffix predicate on the "securityGroups" field.
func SecurityGroupsHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldSecurityGroups, v))
}

// SecurityGroupsEqualFold applies the EqualFold predicate on the "securityGroups" field.
func SecurityGroupsEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldSecurityGroups, v))
}

// SecurityGroupsContainsFold applies the ContainsFold predicate on the "securityGroups" field.
func SecurityGroupsContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldSecurityGroups, v))
}

// BillTypeEQ applies the EQ predicate on the "billType" field.
func BillTypeEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldBillType, v))
}

// BillTypeNEQ applies the NEQ predicate on the "billType" field.
func BillTypeNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldBillType, v))
}

// BillTypeIn applies the In predicate on the "billType" field.
func BillTypeIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldBillType, vs...))
}

// BillTypeNotIn applies the NotIn predicate on the "billType" field.
func BillTypeNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldBillType, vs...))
}

// BillTypeGT applies the GT predicate on the "billType" field.
func BillTypeGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldBillType, v))
}

// BillTypeGTE applies the GTE predicate on the "billType" field.
func BillTypeGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldBillType, v))
}

// BillTypeLT applies the LT predicate on the "billType" field.
func BillTypeLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldBillType, v))
}

// BillTypeLTE applies the LTE predicate on the "billType" field.
func BillTypeLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldBillType, v))
}

// BillTypeContains applies the Contains predicate on the "billType" field.
func BillTypeContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldBillType, v))
}

// BillTypeHasPrefix applies the HasPrefix predicate on the "billType" field.
func BillTypeHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldBillType, v))
}

// BillTypeHasSuffix applies the HasSuffix predicate on the "billType" field.
func BillTypeHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldBillType, v))
}

// BillTypeEqualFold applies the EqualFold predicate on the "billType" field.
func BillTypeEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldBillType, v))
}

// BillTypeContainsFold applies the ContainsFold predicate on the "billType" field.
func BillTypeContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldBillType, v))
}

// ChargeTypeEQ applies the EQ predicate on the "chargeType" field.
func ChargeTypeEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldChargeType, v))
}

// ChargeTypeNEQ applies the NEQ predicate on the "chargeType" field.
func ChargeTypeNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldChargeType, v))
}

// ChargeTypeIn applies the In predicate on the "chargeType" field.
func ChargeTypeIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldChargeType, vs...))
}

// ChargeTypeNotIn applies the NotIn predicate on the "chargeType" field.
func ChargeTypeNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldChargeType, vs...))
}

// ChargeTypeGT applies the GT predicate on the "chargeType" field.
func ChargeTypeGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldChargeType, v))
}

// ChargeTypeGTE applies the GTE predicate on the "chargeType" field.
func ChargeTypeGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldChargeType, v))
}

// ChargeTypeLT applies the LT predicate on the "chargeType" field.
func ChargeTypeLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldChargeType, v))
}

// ChargeTypeLTE applies the LTE predicate on the "chargeType" field.
func ChargeTypeLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldChargeType, v))
}

// ChargeTypeContains applies the Contains predicate on the "chargeType" field.
func ChargeTypeContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldChargeType, v))
}

// ChargeTypeHasPrefix applies the HasPrefix predicate on the "chargeType" field.
func ChargeTypeHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldChargeType, v))
}

// ChargeTypeHasSuffix applies the HasSuffix predicate on the "chargeType" field.
func ChargeTypeHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldChargeType, v))
}

// ChargeTypeEqualFold applies the EqualFold predicate on the "chargeType" field.
func ChargeTypeEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldChargeType, v))
}

// ChargeTypeContainsFold applies the ContainsFold predicate on the "chargeType" field.
func ChargeTypeContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldChargeType, v))
}

// IsActiveEQ applies the EQ predicate on the "isActive" field.
func IsActiveEQ(v bool) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldIsActive, v))
}

// IsActiveNEQ applies the NEQ predicate on the "isActive" field.
func IsActiveNEQ(v bool) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldIsActive, v))
}

// InstanceTypeEQ applies the EQ predicate on the "instanceType" field.
func InstanceTypeEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEQ(FieldInstanceType, v))
}

// InstanceTypeNEQ applies the NEQ predicate on the "instanceType" field.
func InstanceTypeNEQ(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNEQ(FieldInstanceType, v))
}

// InstanceTypeIn applies the In predicate on the "instanceType" field.
func InstanceTypeIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldIn(FieldInstanceType, vs...))
}

// InstanceTypeNotIn applies the NotIn predicate on the "instanceType" field.
func InstanceTypeNotIn(vs ...string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldNotIn(FieldInstanceType, vs...))
}

// InstanceTypeGT applies the GT predicate on the "instanceType" field.
func InstanceTypeGT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGT(FieldInstanceType, v))
}

// InstanceTypeGTE applies the GTE predicate on the "instanceType" field.
func InstanceTypeGTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldGTE(FieldInstanceType, v))
}

// InstanceTypeLT applies the LT predicate on the "instanceType" field.
func InstanceTypeLT(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLT(FieldInstanceType, v))
}

// InstanceTypeLTE applies the LTE predicate on the "instanceType" field.
func InstanceTypeLTE(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldLTE(FieldInstanceType, v))
}

// InstanceTypeContains applies the Contains predicate on the "instanceType" field.
func InstanceTypeContains(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContains(FieldInstanceType, v))
}

// InstanceTypeHasPrefix applies the HasPrefix predicate on the "instanceType" field.
func InstanceTypeHasPrefix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasPrefix(FieldInstanceType, v))
}

// InstanceTypeHasSuffix applies the HasSuffix predicate on the "instanceType" field.
func InstanceTypeHasSuffix(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldHasSuffix(FieldInstanceType, v))
}

// InstanceTypeEqualFold applies the EqualFold predicate on the "instanceType" field.
func InstanceTypeEqualFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldEqualFold(FieldInstanceType, v))
}

// InstanceTypeContainsFold applies the ContainsFold predicate on the "instanceType" field.
func InstanceTypeContainsFold(v string) predicate.CloudHost {
	return predicate.CloudHost(sql.FieldContainsFold(FieldInstanceType, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CloudHost) predicate.CloudHost {
	return predicate.CloudHost(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CloudHost) predicate.CloudHost {
	return predicate.CloudHost(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CloudHost) predicate.CloudHost {
	return predicate.CloudHost(func(s *sql.Selector) {
		p(s.Not())
	})
}
