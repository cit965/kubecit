syntax = "proto3";

package helloworld.v1;

import "google/api/annotations.proto";

option go_package = "kubecit/api/helloworld/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.helloworld.v1";
option java_outer_classname = "HelloworldProtoV1";

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      get: "/helloworld/{name}"
    };
  }

  // Register a user
  rpc UserRegister (UserRegisterRequest) returns (UserRegisterResponse) {
    option (google.api.http) = {
      post: "/user/register"
      body: "*"
    };
  }

  rpc UserList (Empty) returns (UserListResponse) {
    option (google.api.http) = {
      get: "/user"
    };
  }


  rpc ClusterList (Empty) returns (ClusterListResponse) {
    option (google.api.http) = {
      get: "/clusters"
    };
  }

  rpc NamespaceList (NamespaceReq) returns (NamespaceResp) {
    option (google.api.http) = {
      get: "/namespaces/{cluster}"
    };
  }
}


message Empty {

}

message User {
  string username = 1;
  string password = 2;
}

message UserListResponse{
  repeated User users = 1;
}

message Cluster {
  string kubeconfig = 1;
  int32  id = 2;
}

message  ClusterListResponse{
  repeated Cluster clusters = 1;
}

message UserRegisterRequest {
  string username = 1;
  string password = 2;
}

message UserRegisterResponse {
  string result = 1;
}


// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

message NamespaceResp {
  repeated string namespaces =1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}


message NamespaceReq{
  int32 cluster = 1;
}
